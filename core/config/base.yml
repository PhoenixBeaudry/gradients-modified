# core/config/base.yml

base_model: NousResearch/Meta-Llama-3-8B-Instruct
model_type: AutoModelForCausalLM
tokenizer_type: AutoTokenizer

load_in_8bit: false
load_in_4bit: false
strict: false

chat_template: llama3
datasets:
dataset_prepared_path:
val_set_size: 0.05
output_dir: miner_id_24

adapter: lora
lora_model_dir:
lora_r: 8
lora_alpha: 16
lora_dropout: 0.05
lora_target_linear: true
lora_fan_in_fan_out:

sequence_len: 512
sample_packing: true
pad_to_sequence_len: false
group_by_length: true

gradient_accumulation_steps: 8
micro_batch_size: 2
num_epochs: 3
optimizer: lion
beta1: 0.9
beta2: 0.999
eps: 1e-8
gradient_clip_val: 1.0

lr_scheduler: onecycle
warmup_ratio: 0.03
pct_start: 0.1
learning_rate: 2e-4
max_steps: 4000

bf16: true
fp16: false
tf32: true
gradient_checkpointing: true

evaluation_strategy: "steps"
eval_steps: 500
save_strategy: "steps"
save_steps: 500
save_total_limit: 3
load_best_model_at_end: true
metric_for_best_model: "eval_loss"
greater_is_better: false
early_stopping_patience: 3

logging_steps: 1


# optional: in your training script, wrap your model
# model = torch.compile(model)

xformers_attention:
s2_attention:

wandb_project: Gradients-On-Demand
wandb_entity:
wandb_mode: online
wandb_run: your_name
wandb_runid: default

hub_model_id:
hub_repo:
hub_strategy: checkpoint
hub_token:

eval_table_size:
eval_max_new_tokens: 128

debug:

deepspeed: /workspace/axolotl/configs/deepspeed_stage2.json
fsdp:
  - full_shard
  - auto_wrap
fsdp_config:
  fsdp_offload_params: true
  fsdp_state_dict_type: FULL_STATE_DICT
  fsdp_transformer_layer_cls_to_wrap: LlamaDecoderLayer

plugins:
  - axolotl.integrations.liger.LigerPlugin
liger_rope: true
liger_rms_norm: true
liger_glu_activation: true
liger_layer_norm: true
liger_fused_linear_cross_entropy: true
